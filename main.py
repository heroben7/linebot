import os
import datetime
from flask import Flask, request
from linebot import LineBotApi, WebhookHandler
from linebot.models import MessageEvent, ImageMessage, TextSendMessage
from apscheduler.schedulers.background import BackgroundScheduler

app = Flask(__name__)

# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Environment Variables
LINE_BOT_API = os.getenv("LINE_CHANNEL_ACCESS_TOKEN")
HANDLER = WebhookHandler(os.getenv("LINE_CHANNEL_SECRET"))
line_bot_api = LineBotApi(LINE_BOT_API)

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
user_image_count = {}

# ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö (09:00 - 20:00)
START_TIME = 9
END_TIME = 20

@app.route("/callback", methods=["POST"])
def callback():
    """ ‡∏£‡∏±‡∏ö Webhook Event ‡∏à‡∏≤‡∏Å LINE """
    signature = request.headers["X-Line-Signature"]
    body = request.get_data(as_text=True)

    try:
        HANDLER.handle(body, signature)
    except Exception as e:
        print(e)
        return "Error", 400

    return "OK", 200

@HANDLER.add(MessageEvent, message=ImageMessage)
def handle_image(event):
    """ ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å """
    global user_image_count
    now = datetime.datetime.now()

    if START_TIME <= now.hour < END_TIME:
        user_id = event.source.user_id
        user_image_count[user_id] = user_image_count.get(user_id, 0) + 1

        reply_text = f"üì∏ ‡∏Ñ‡∏∏‡∏ì‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß {user_image_count[user_id]} ‡∏£‡∏π‡∏õ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ!"
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply_text))

def reset_and_report():
    """ ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 20:00 ‡∏ô. ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ """
    global user_image_count
    summary = "üìä **‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ**\n"

    if user_image_count:
        for user_id, count in user_image_count.items():
            summary += f"- {user_id[:6]}***: {count} ‡∏£‡∏π‡∏õ\n"
    else:
        summary = "üìä ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏•‡∏¢!"

    GROUP_ID = "YOUR_GROUP_ID"
    line_bot_api.push_message(GROUP_ID, TextSendMessage(text=summary))

    user_image_count = {}

# ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏ï‡∏≠‡∏ô 20:00 ‡∏ô.
scheduler = BackgroundScheduler()
scheduler.add_job(reset_and_report, "cron", hour=20, minute=0)
scheduler.start()

if __name__ == "__main__":
    app.run(port=5000)
